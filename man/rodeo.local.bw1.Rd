% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/StatCompR.R
\name{rodeo.local.bw1}
\alias{rodeo.local.bw1}
\title{A kernel density estimation bw selection method}
\usage{
rodeo.local.bw1(xx, x, h.init = 1.3/log(log(n)), beta = 0.9, cn = log(n)/n)
}
\arguments{
\item{xx}{the point to be estimated}

\item{x}{data points}

\item{h.init}{initial smooth parameter}

\item{beta}{learning rate, default 0.9}

\item{cn}{a turning parameter, default log(n)/n}

\item{n}{the number of trials.}
}
\value{
h selected by this method
}
\description{
A KDE bw selection method for one dimension
}
\examples{
\dontrun{
set.seed(111)
n <- 200
Num.Cmp <- 8
pro <- rep(1/8, Num.Cmp)
multi <- sample(1:Num.Cmp, n, replace = T, prob=pro)
mu <- 3 * ((2/3)^(1:Num.Cmp) - 1)
sigma <- (2/3)^(1:Num.Cmp)
x <- NULL
for (ii in 1:Num.Cmp) {
  com_txt <- paste("com", ii, " <- rnorm(length(which(multi==", ii, ")), 
               mean=", mu[ii], ", sd=", sigma[ii], ")",sep="")
  eval(parse(text=com_txt))
  com_txt <- paste("x <- c(x, com", ii, ")", sep="")
  eval(parse(text=com_txt))
}

# true density function, y is h, and z is v.
y <- seq(-3, 1, 0.01)
z <- rep(0, length(y))
for (ii in 1:Num.Cmp) {
  z <- z + pro[ii] * dnorm(y, mean=mu[ii], sd=sigma[ii])
}
t <- seq(-3, 1, 0.05)
h <- unlist(base::lapply(X=t, FUN=rodeo.local.bw1, x=x))
plot(t, h, "l", main="Bandwidth of Rodeo", xlab="x", ylab="h")
}
}
